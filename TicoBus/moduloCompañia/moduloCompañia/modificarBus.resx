<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>